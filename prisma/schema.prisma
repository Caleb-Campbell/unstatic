generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isDeveloper   Boolean   @default(false)
  accounts      Account[]
  sessions      Session[]
  projects      Project[] @relation("UserProjects")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id      Int      @id @default(autoincrement())
  name    String
  folders Folder[]
  users   User[]   @relation("UserProjects")
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  parentId  Int?
  projectId Int
  parent    Folder?  @relation("SubFolders", fields: [parentId], references: [id])
  children  Folder[] @relation("SubFolders")
  project   Project  @relation(fields: [projectId], references: [id])
  images    Image[]
}

model Image {
  id       Int    @id @default(autoincrement())
  label    String?
  src      String?
  url      String
  folderId Int
  folder   Folder @relation(fields: [folderId], references: [id])
}
